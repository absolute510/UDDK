/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package uddk.view;

import java.text.DateFormat;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.Vector;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import uddk.controller.LoginController;
import uddk.controller.RoomController;

/**
 *
 * @author USER
 */
public class RoomRegistered extends javax.swing.JFrame {

    /**
     * Creates new form RoomRegistered
     */
    private String username;

    public RoomRegistered(String username) {
        initComponents();
        initTBRegistered();
        this.username = username;
        checkUserPrivilege();
        this.setLocationRelativeTo(null);
        this.setVisible(true);
    }

    private void initTBRegistered() {
        Date date = new Date();
        Vector data = RoomController.getRegisteredRoomForTable(date);
        tbRegistered.setModel(new DefaultTableModel((Vector) data.get(0), (Vector) data.get(1)) {
            @Override
            public boolean isCellEditable(int row, int column) {
                return false;
            }
        });
    }

    private void updateTBRegistered(Vector data) {
        Vector tableHeaders = getTBRegisteredHeaders();
        tbRegistered.setModel(new DefaultTableModel((Vector) data.get(0), tableHeaders) {
            @Override
            public boolean isCellEditable(int row, int column) {
                return false;
            }
        });
    }

    private Vector getTBRegisteredHeaders() {
        Vector tableHeaders = new Vector();
        tableHeaders.add("Ca 1 (7h - 9h)");
        tableHeaders.add("Ca 2 (9h30 - 11h30)");
        tableHeaders.add("Ca 3 (12h30 - 15h)");
        tableHeaders.add("Ca 4 (15h30 - 17h)");
        tableHeaders.add("Ca 5 (18h30 - 21h)");
        return tableHeaders;
    }

    private void checkUserPrivilege() {
        this.btDeviceManager.setVisible(LoginController.isAdmin(username));
        this.btUserManager.setVisible(LoginController.isAdmin(username));
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        btDeviceManager = new javax.swing.JButton();
        btUserManager = new javax.swing.JButton();
        btMainpage = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tbRegistered = new javax.swing.JTable();
        btCheckOut = new javax.swing.JButton();
        txtDate = new javax.swing.JTextField();
        btSearch = new javax.swing.JButton();
        btCheckIn = new javax.swing.JButton();
        btReport = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setFont(new java.awt.Font("Times New Roman", 0, 36)); // NOI18N
        jLabel1.setText("Thông tin phòng đã đăng ký");

        btDeviceManager.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        btDeviceManager.setText("Quản lý thiết bị");
        btDeviceManager.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btDeviceManagerActionPerformed(evt);
            }
        });

        btUserManager.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        btUserManager.setText("Quản lý người dùng");
        btUserManager.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btUserManagerActionPerformed(evt);
            }
        });

        btMainpage.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        btMainpage.setText("Thông tin phòng");
        btMainpage.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btMainpageActionPerformed(evt);
            }
        });

        tbRegistered.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "Ngay", "Thoigian", "Magiaovien", "Maphong", "Trangthai"
            }
        ));
        jScrollPane1.setViewportView(tbRegistered);

        btCheckOut.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        btCheckOut.setText("Check out");
        btCheckOut.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btCheckOutActionPerformed(evt);
            }
        });

        txtDate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtDateActionPerformed(evt);
            }
        });

        btSearch.setText("Tìm ngày");
        btSearch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btSearchActionPerformed(evt);
            }
        });

        btCheckIn.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        btCheckIn.setText("Check in");
        btCheckIn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btCheckInActionPerformed(evt);
            }
        });

        btReport.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        btReport.setText("Báo cáo");
        btReport.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btReportActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1)
                .addContainerGap())
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(btReport)
                .addGap(18, 18, 18)
                .addComponent(btCheckIn)
                .addGap(18, 18, 18)
                .addComponent(btCheckOut)
                .addGap(27, 27, 27))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(201, Short.MAX_VALUE)
                .addComponent(jLabel1)
                .addGap(194, 194, 194))
            .addGroup(layout.createSequentialGroup()
                .addGap(28, 28, 28)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(btDeviceManager, javax.swing.GroupLayout.PREFERRED_SIZE, 159, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(133, 133, 133)
                        .addComponent(btMainpage, javax.swing.GroupLayout.PREFERRED_SIZE, 159, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btUserManager, javax.swing.GroupLayout.PREFERRED_SIZE, 159, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(21, 21, 21))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(txtDate, javax.swing.GroupLayout.PREFERRED_SIZE, 159, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(10, 10, 10)
                        .addComponent(btSearch, javax.swing.GroupLayout.PREFERRED_SIZE, 118, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btMainpage, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btUserManager, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btDeviceManager, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(btSearch, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(txtDate, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 290, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btCheckOut, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btCheckIn, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btReport, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(24, 24, 24))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btMainpageActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btMainpageActionPerformed
        new MainPage(username);
        this.dispose();
    }//GEN-LAST:event_btMainpageActionPerformed

    private void btDeviceManagerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btDeviceManagerActionPerformed
        new DeviceManager(username);
        this.dispose();
    }//GEN-LAST:event_btDeviceManagerActionPerformed

    private void btUserManagerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btUserManagerActionPerformed
        new UserManager(username);
        this.dispose();
    }//GEN-LAST:event_btUserManagerActionPerformed

    private void btCheckOutActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btCheckOutActionPerformed
        if (tbRegistered.getSelectedRow() < 0) {
            JOptionPane.showMessageDialog(null, "Please select at least one record!", "Invalid user", 0);
        } else {
            String roomCode = tbRegistered.getValueAt(tbRegistered.getSelectedRow(), 3).toString();
            if (roomCode == null || roomCode.equals("")) {
                JOptionPane.showMessageDialog(this, "Please select an valid room!", "Invalid room", 0);
            } else {
                String period = tbRegistered.getValueAt(tbRegistered.getSelectedRow(), 1).toString();
                String userId = LoginController.getUserIdByUsername(username);
                String date = tbRegistered.getValueAt(tbRegistered.getSelectedRow(), 0).toString();
                if (RoomController.checkOut(roomCode, period, userId, date)) {
                    JOptionPane.showMessageDialog(this, "Checked out!");
                    initTBRegistered();
                } else {
                    JOptionPane.showMessageDialog(this, "You did not register this room or this room is in-use!", "Check in failed", 0);
                }

            }
        }
    }//GEN-LAST:event_btCheckOutActionPerformed

    private void btSearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btSearchActionPerformed
        Date date = validateDate(txtDate.getText().trim());
        if (date != null) {
            Vector vector = RoomController.getRegisteredRoomForTable(date);
            updateTBRegistered(vector);
        } else {
            JOptionPane.showMessageDialog(this, "Please input an valid date from now!", "Invalid date", 0);
        }
    }//GEN-LAST:event_btSearchActionPerformed

    private void btCheckInActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btCheckInActionPerformed
        if (tbRegistered.getSelectedRow() < 0) {
            JOptionPane.showMessageDialog(null, "Please select at least one record!", "Invalid user", 0);
        } else {
            String roomCode = tbRegistered.getValueAt(tbRegistered.getSelectedRow(), 3).toString();
            if (roomCode == null || roomCode.equals("")) {
                JOptionPane.showMessageDialog(this, "Please select an valid room!", "Invalid room", 0);
            } else {
                String period = tbRegistered.getValueAt(tbRegistered.getSelectedRow(), 1).toString();
                String userId = LoginController.getUserIdByUsername(username);
                String date = tbRegistered.getValueAt(tbRegistered.getSelectedRow(), 0).toString();
                if (RoomController.checkIn(roomCode, period, userId, date)) {
                    JOptionPane.showMessageDialog(this, "Checked in!");
                    initTBRegistered();
                } else {
                    JOptionPane.showMessageDialog(this, "You did not register this room", "Check in failed", 0);
                }

            }
        }
    }//GEN-LAST:event_btCheckInActionPerformed

    private void btReportActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btReportActionPerformed
        if (tbRegistered.getSelectedRow() < 0) {
            JOptionPane.showMessageDialog(null, "Please select at least one record!", "Invalid user", 0);
        } else {
            String userId = tbRegistered.getValueAt(tbRegistered.getSelectedRow(), 2).toString();
            String roomId = tbRegistered.getValueAt(tbRegistered.getSelectedRow(), 3).toString();
            String period = tbRegistered.getValueAt(tbRegistered.getSelectedRow(), 1).toString();
            String[] data = {userId, roomId, period};
            new Report(this, true, data);
        }

    }//GEN-LAST:event_btReportActionPerformed

    private void txtDateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtDateActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtDateActionPerformed

    private Date validateDate(String date) {
        DateFormat sdf = new SimpleDateFormat("dd/MM/yyyy");
        sdf.setLenient(false);
        try {
            Date tobeValidate = sdf.parse(date);
            return tobeValidate;
        } catch (ParseException e) {
            return null;
        }
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btCheckIn;
    private javax.swing.JButton btCheckOut;
    private javax.swing.JButton btDeviceManager;
    private javax.swing.JButton btMainpage;
    private javax.swing.JButton btReport;
    private javax.swing.JButton btSearch;
    private javax.swing.JButton btUserManager;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tbRegistered;
    private javax.swing.JTextField txtDate;
    // End of variables declaration//GEN-END:variables
}

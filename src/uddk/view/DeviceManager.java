/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package uddk.view;

import java.util.Vector;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import uddk.controller.DeviceManagerController;

/**
 *
 * @author USER
 */
public class DeviceManager extends javax.swing.JFrame {

    /**
     * Creates new form DeviceManager
     */
    private String username;

    public DeviceManager(String username) {
        initComponents();
        initTBDevice();
        initCBDeviceName();
        initCBDeviceStatus();
        this.username = username;
        this.setLocationRelativeTo(null);
        this.setVisible(true);
    }

    private void initTBDevice() {
        Vector data = DeviceManagerController.getAllDeviceForTable();
        tbDevice.setModel(new DefaultTableModel((Vector) data.get(0), (Vector) data.get(1)) {
            @Override
            public boolean isCellEditable(int row, int column) {
                return false;
            }
        });
    }

    public void updateTBDevice(Vector data) {
        tbDevice.setModel(new DefaultTableModel((Vector) data.get(0), (Vector) data.get(1)) {
            @Override
            public boolean isCellEditable(int row, int column) {
                return false;
            }
        });
    }

    public void initCBDeviceName() {
        Vector data = DeviceManagerController.getAllUniqueDeviceName();
        data.insertElementAt("", 0);
        cbName.setModel(new DefaultComboBoxModel(data));
    }

    public void initCBDeviceStatus() {
        Vector data = DeviceManagerController.getAllUniqueDeviceStatus();
        data.insertElementAt("", 0);
        cbStatus.setModel(new DefaultComboBoxModel(data));
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        btRoomRegistered = new javax.swing.JButton();
        btUserManager = new javax.swing.JButton();
        btRoom = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tbDevice = new javax.swing.JTable();
        cbStatus = new javax.swing.JComboBox<>();
        cbName = new javax.swing.JComboBox<>();
        btFilter = new javax.swing.JButton();
        btDelete = new javax.swing.JButton();
        txtCode = new javax.swing.JTextField();
        btReportList = new javax.swing.JButton();
        btUpdate = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setFont(new java.awt.Font("Times New Roman", 0, 36)); // NOI18N
        jLabel1.setText("Quản lý thiết bị");

        btRoomRegistered.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        btRoomRegistered.setText("Thông tin phòng đã đăng ký");
        btRoomRegistered.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btRoomRegisteredActionPerformed(evt);
            }
        });

        btUserManager.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        btUserManager.setText("Quản lý người dùng");
        btUserManager.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btUserManagerActionPerformed(evt);
            }
        });

        btRoom.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        btRoom.setText("Thông tin phòng");
        btRoom.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btRoomActionPerformed(evt);
            }
        });

        tbDevice.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Mã phòng", "Mã thiết bị", "Tên thiết bị", "Tình trạng"
            }
        ));
        jScrollPane1.setViewportView(tbDevice);

        cbStatus.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Tình trạng", "Tốt", "Hỏng" }));

        cbName.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Tên thiết bị", "Máy chiếu", "PC", "Mic", "Loa" }));

        btFilter.setText("Tìm kiếm");
        btFilter.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btFilterActionPerformed(evt);
            }
        });

        btDelete.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        btDelete.setText("Xóa thiết bị");
        btDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btDeleteActionPerformed(evt);
            }
        });

        btReportList.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        btReportList.setText("Thông tin báo cáo");
        btReportList.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btReportListActionPerformed(evt);
            }
        });

        btUpdate.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        btUpdate.setText("Cập nhật thiết bị");
        btUpdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btUpdateActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane1)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(15, 15, 15)
                                .addComponent(cbName, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(43, 43, 43)
                                .addComponent(cbStatus, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(111, 111, 111)
                                .addComponent(txtCode, javax.swing.GroupLayout.PREFERRED_SIZE, 149, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(39, 39, 39)
                        .addComponent(btRoom, javax.swing.GroupLayout.PREFERRED_SIZE, 159, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(109, 109, 109)
                        .addComponent(btRoomRegistered)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 132, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(btFilter, javax.swing.GroupLayout.PREFERRED_SIZE, 108, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btUserManager, javax.swing.GroupLayout.PREFERRED_SIZE, 159, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(37, 37, 37)))
                .addContainerGap())
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(40, 40, 40)
                .addComponent(btReportList)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btUpdate)
                .addGap(130, 130, 130)
                .addComponent(btDelete)
                .addGap(61, 61, 61))
            .addGroup(layout.createSequentialGroup()
                .addGap(296, 296, 296)
                .addComponent(jLabel1)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btRoomRegistered, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btRoom, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btUserManager, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(cbStatus, javax.swing.GroupLayout.DEFAULT_SIZE, 35, Short.MAX_VALUE)
                        .addComponent(cbName, javax.swing.GroupLayout.DEFAULT_SIZE, 35, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtCode, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btFilter, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 290, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btDelete, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btReportList, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btUpdate, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(24, 24, 24))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btRoomActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btRoomActionPerformed
        new MainPage(username);
        this.dispose();
    }//GEN-LAST:event_btRoomActionPerformed

    private void btUserManagerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btUserManagerActionPerformed
        new UserManager(username);
        this.dispose();
    }//GEN-LAST:event_btUserManagerActionPerformed

    private void btFilterActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btFilterActionPerformed
        String name = cbName.getSelectedItem().toString();
        String status = cbStatus.getSelectedItem().toString();
        String code = txtCode.getText();

        Vector data = DeviceManagerController.filterDevice(name, status, code);
        updateTBDevice(data);
    }//GEN-LAST:event_btFilterActionPerformed

    private void btDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btDeleteActionPerformed
        if (tbDevice.getSelectedRow() < 0) {
            JOptionPane.showMessageDialog(null, "Please select at least one record!", "Invalid device", 0);
        } else {
            String deviceId = tbDevice.getValueAt(tbDevice.getSelectedRow(), 1).toString();
            int input = JOptionPane.showConfirmDialog(this, "Do you want to delete this record?");
            if (input == 0) {
                // User choose "yes"
                if (DeviceManagerController.deleteDeviceById(deviceId)) {
                    JOptionPane.showMessageDialog(this, "Record deleted!");
                    initTBDevice();
                } else {
                    JOptionPane.showMessageDialog(null, "Please check for relation!", "Delete failed", 0);
                }
            }
        }
    }//GEN-LAST:event_btDeleteActionPerformed

    private void btUpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btUpdateActionPerformed
        if (tbDevice.getSelectedRow() < 0) {
            JOptionPane.showMessageDialog(null, "Please select at least one record!", "Invalid device", 0);
        } else {
            String deviceId = tbDevice.getValueAt(tbDevice.getSelectedRow(), 1).toString();
            String status = tbDevice.getValueAt(tbDevice.getSelectedRow(), 3).toString();
            if (DeviceManagerController.updateDeviceStatusById(deviceId, status.equals("tot") ? true : false)) {
                initTBDevice();
            } else {
                JOptionPane.showMessageDialog(this, "Update failed!");
            }
        }
    }//GEN-LAST:event_btUpdateActionPerformed

    private void btRoomRegisteredActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btRoomRegisteredActionPerformed
        new RoomRegistered(username);
        this.dispose();
    }//GEN-LAST:event_btRoomRegisteredActionPerformed

    private void btReportListActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btReportListActionPerformed
        new ReportList(username);
        this.dispose();
    }//GEN-LAST:event_btReportListActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btDelete;
    private javax.swing.JButton btFilter;
    private javax.swing.JButton btReportList;
    private javax.swing.JButton btRoom;
    private javax.swing.JButton btRoomRegistered;
    private javax.swing.JButton btUpdate;
    private javax.swing.JButton btUserManager;
    private javax.swing.JComboBox<String> cbName;
    private javax.swing.JComboBox<String> cbStatus;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tbDevice;
    private javax.swing.JTextField txtCode;
    // End of variables declaration//GEN-END:variables
}

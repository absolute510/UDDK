/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package uddk.view;

import java.text.DateFormat;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;
import javax.swing.JOptionPane;
import uddk.controller.LoginController;
import uddk.controller.RoomController;
import uddk.entity.Room;

/**
 *
 * @author USER
 */
public class RegisterRoom extends javax.swing.JDialog {

    /**
     * Creates new form RegisterRoom
     */
    private String roomId;
    private String username;
    private boolean canRegister;

    public RegisterRoom(java.awt.Frame parent, boolean modal, String roomId, String username) {
        super(parent, modal);
        initComponents();
        this.username = username;
        this.roomId = roomId;
        this.canRegister = false;
        this.btRegister.setEnabled(this.canRegister);
        initFieldData();
        this.setLocationRelativeTo(null);
        this.setVisible(true);
    }

    private void initFieldData() {
        Room room = RoomController.getRoomByRoomId(roomId);
        ArrayList<String> brokenDevices = RoomController.getBrokenDeviceOfRoomId(roomId);
        String txtBroken = "";
        for (int i = 0; i < brokenDevices.size(); i++) {
            txtBroken += brokenDevices.get(i);
            if (i < brokenDevices.size() - 1) {
                txtBroken += ", ";
            }
        }

        txtRoomCode.setText(room.getId());
        txtRoomCode.setEnabled(false);

        txtRoomType.setText(room.getType());
        txtRoomType.setEnabled(false);

        txtRoomCap.setText(String.valueOf(room.getCapacity()));
        txtRoomCap.setEnabled(false);

        txtDevice.setText(txtBroken);
        txtDevice.setEnabled(false);
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        txtRoomCode = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        txtRoomCap = new javax.swing.JTextField();
        txtRoomType = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        txtDevice = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        cbPeriod = new javax.swing.JComboBox<>();
        btCheck = new javax.swing.JButton();
        btCancel = new javax.swing.JButton();
        btRegister = new javax.swing.JButton();
        txtDate = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jLabel1.setFont(new java.awt.Font("Times New Roman", 0, 24)); // NOI18N
        jLabel1.setText("Đăng ký phòng");

        jLabel3.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jLabel3.setText("Mã phòng");

        txtRoomCode.setSelectedTextColor(new java.awt.Color(0, 0, 255));
        txtRoomCode.setSelectionColor(new java.awt.Color(0, 0, 255));
        txtRoomCode.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtRoomCodeActionPerformed(evt);
            }
        });

        jLabel5.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jLabel5.setText("Loại phòng");

        jLabel4.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jLabel4.setText("Sức chứa");

        txtRoomCap.setSelectedTextColor(new java.awt.Color(0, 0, 255));

        txtRoomType.setSelectedTextColor(new java.awt.Color(0, 0, 255));

        jLabel7.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jLabel7.setText("Thiết bị hỏng");

        txtDevice.setSelectedTextColor(new java.awt.Color(0, 0, 255));
        txtDevice.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtDeviceActionPerformed(evt);
            }
        });

        jLabel8.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jLabel8.setText("Thời gian sử dụng");

        cbPeriod.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Ca 1", "Ca 2", "Ca 3", "Ca 4", "Ca 5" }));
        cbPeriod.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cbPeriodItemStateChanged(evt);
            }
        });
        cbPeriod.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbPeriodActionPerformed(evt);
            }
        });

        btCheck.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        btCheck.setText("Kiểm tra");
        btCheck.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btCheckActionPerformed(evt);
            }
        });

        btCancel.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        btCancel.setText("Hủy");
        btCancel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btCancelActionPerformed(evt);
            }
        });

        btRegister.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        btRegister.setText("Đăng ký");
        btRegister.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btRegisterActionPerformed(evt);
            }
        });

        txtDate.setText("dd/MM/yyyy");
        txtDate.setSelectedTextColor(new java.awt.Color(0, 0, 255));
        txtDate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtDateActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(135, 135, 135)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addGap(50, 50, 50)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 65, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(82, 82, 82)
                                .addComponent(txtRoomCode))
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 65, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 65, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(82, 82, 82)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(txtRoomType)
                                    .addComponent(txtRoomCap)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addGroup(layout.createSequentialGroup()
                                                .addComponent(txtDate, javax.swing.GroupLayout.PREFERRED_SIZE, 111, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(cbPeriod, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE))
                                            .addComponent(txtDevice, javax.swing.GroupLayout.PREFERRED_SIZE, 197, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGap(0, 0, Short.MAX_VALUE)))))
                        .addGap(65, 65, 65))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(9, 9, 9)
                                .addComponent(btCheck, javax.swing.GroupLayout.PREFERRED_SIZE, 104, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(btRegister, javax.swing.GroupLayout.PREFERRED_SIZE, 104, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(btCancel, javax.swing.GroupLayout.PREFERRED_SIZE, 104, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(jLabel8, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 103, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtRoomCode, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtRoomType, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtRoomCap, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtDevice, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cbPeriod, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtDate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btCheck, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btCancel, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btRegister, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btCancelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btCancelActionPerformed
        this.dispose();
    }//GEN-LAST:event_btCancelActionPerformed

    private void btCheckActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btCheckActionPerformed
        String date = validateDate(txtDate.getText().trim());
        if (date == null || date.equals("")) {
            JOptionPane.showMessageDialog(this, "Please input valid date from now!", "Invalid date", 0);
        } else {
            canRegister = RoomController.checkAvailableRoom(txtRoomCode.getText().trim(), "ca " + (cbPeriod.getSelectedIndex() + 1), date);
            btRegister.setEnabled(canRegister);
        }

    }//GEN-LAST:event_btCheckActionPerformed

    private void txtDeviceActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtDeviceActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtDeviceActionPerformed

    private void btRegisterActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btRegisterActionPerformed
        String date = validateDate(txtDate.getText().trim());
        String userId = LoginController.getUserIdByUsername(username);
        if (date == null || date.equals("")) {
            JOptionPane.showMessageDialog(this, "Please input valid date from now!", "Invalid date", 0);
        } else {
            if (RoomController.registerRoom(roomId, "ca " + (cbPeriod.getSelectedIndex() + 1), userId, date)) {
                JOptionPane.showMessageDialog(this, "Register successfully!");
            } else {
                JOptionPane.showMessageDialog(this, "Register failed!");
            }
        }

    }//GEN-LAST:event_btRegisterActionPerformed

    private void txtDateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtDateActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtDateActionPerformed

    private void cbPeriodActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbPeriodActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cbPeriodActionPerformed

    private void txtRoomCodeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtRoomCodeActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtRoomCodeActionPerformed

    private void cbPeriodItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cbPeriodItemStateChanged
        // TODO add your handling code here:
        btRegister.setEnabled(false);
    }//GEN-LAST:event_cbPeriodItemStateChanged

    private String validateDate(String date) {
        DateFormat sdf = new SimpleDateFormat("dd/MM/yyyy");
        sdf.setLenient(false);
        try {
            Date tobeValidate = sdf.parse(date);
            if (tobeValidate.compareTo(sdf.parse(sdf.format(new Date()))) < 0) {
                return null;
            }
            return sdf.format(tobeValidate);
        } catch (ParseException e) {
            return null;
        }
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btCancel;
    private javax.swing.JButton btCheck;
    private javax.swing.JButton btRegister;
    private javax.swing.JComboBox<String> cbPeriod;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JTextField txtDate;
    private javax.swing.JTextField txtDevice;
    private javax.swing.JTextField txtRoomCap;
    private javax.swing.JTextField txtRoomCode;
    private javax.swing.JTextField txtRoomType;
    // End of variables declaration//GEN-END:variables
}
